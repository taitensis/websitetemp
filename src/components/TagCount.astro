---
import { Typography } from "@/components/ui/typography";
import { Badge } from "@/components/ui/badge";
import { join } from "@/lib/utils";
import { t, setLocale, DEFAULT_LOCALE, type Locale } from '@/i18n/ui';

const locale = (Astro.currentLocale ?? DEFAULT_LOCALE) as Locale;
setLocale(locale); // Set the global locale context

type TagCount = [string, number];

interface Props {
  items?: TagCount[]; // [["asian", 3], ["vegan", 2], ...]
  base?: string;
}

const { items = [], base = import.meta.env.BASE_URL } = Astro.props;

const localePrefix = locale === DEFAULT_LOCALE ? "" : `/${locale}`;
const localeBase = join(base, localePrefix);
---
{items.length > 0 && (
  <section
    class="mx-auto w-full max-w-6xl mt-2xl mb-lg"
  >
    <div>
      <Typography variant="h2">{t("recipes.browse_by_tag")}</Typography>
    </div>

    <div class="flex flex-wrap mt-md gap-sm">
      {items.map(([t, c]) => (
        <a
          key={t}
          href={`${join(localeBase, "recipes")}?tag=${encodeURIComponent(t)}`}
          class="focus-visible:outline-primary inline-block transition-transform duration-200 hover:scale-105 focus-visible:outline-2 focus-visible:outline-offset-2 active:scale-95"
        >
          <Badge
            variant="secondary"
            className="transition-all duration-200 hover:bg-secondary-hover hover:border-primary/20 border border-transparent cursor-pointer"
          >
            {t}
            <span class="ml-1 transition-colors duration-200">({c as number})</span>
          </Badge>
        </a>
      ))}
    </div>
  </section>
)}
