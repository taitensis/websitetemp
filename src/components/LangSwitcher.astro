---
// LangSwitcher.astro
import LangMenu from '@/components/LangMenu';
import { LOCALES, getLocaleLabel, type Locale } from '@/i18n/ui';
import { getRelativeLocaleUrl } from 'astro:i18n';

const current = Astro.currentLocale as Locale;

const rawPath = Astro.url.pathname; // e.g. "/fr/recipes/..."
console.log('🔍 rawPath:', rawPath);
const unscoped = rawPath.replace(new RegExp(`^/${current}(?=/|$)`), '');
console.log('🔍 unscoped:', unscoped);
const path = unscoped || '/';
console.log('🔍 final path:', path);

// const items = LOCALES.map((locale) => ({
//   label: getLocaleLabel(locale),
//   url: getRelativeLocaleUrl(locale, path),
//   current: locale === current,
// }));

// Also log what URLs are being generated

const items = LOCALES.map((locale) => ({
  label: getLocaleLabel(locale),
  url: getRelativeLocaleUrl(locale, path),
  current: locale === current,
}));

console.log(
  '🔍 generated URLs:',
  items.map((item) => ({ locale: item.label, url: item.url }))
);

const currentLabel = getLocaleLabel(current);
console.log('🔍 currentLabel:', currentLabel);
---

<!-- Temporary debug info -->
<div style="background: #ffeb3b; padding: 10px; font-family: monospace; border: 2px solid red;">
  <strong>DEBUG INFO:</strong><br/>
  current: {current}<br/>
  rawPath: {rawPath}<br/>
  unscoped: {unscoped}<br/>
  path: {path}<br/>
  <br/>
  Generated URLs:<br/>
  {items.map(item => (
    <div>• {item.label}: {item.url}</div>
  ))}
  currentLabel: {currentLabel}<br/>
</div>

<LangMenu client:load items={items} currentLabel={currentLabel} />
