---
// src/pages/recipes/index.astro
import BaseLayout from '@/layouts/BaseLayout.astro';
import hero from '@/assets/hero.webp';
import RecipesIndex from '@/components/RecipesIndex';
import { getCollection } from 'astro:content';
import { t, setLocale, DEFAULT_LOCALE, type Locale } from '@/i18n/ui';
import { Typography } from '@/components/ui/typography';

const locale = (Astro.currentLocale ?? DEFAULT_LOCALE) as Locale;
setLocale(locale); // Set the global locale context

// 1) load once
const recipes = await getCollection('recipes');

// 2) locale-filter ONCE (adjust if you want default-locale to only show default)
const filtered = recipes.filter((r) =>
  locale === DEFAULT_LOCALE
    ? !r.data.lang || r.data.lang === DEFAULT_LOCALE
    : r.data.lang === locale
);

const localePrefix = locale === DEFAULT_LOCALE ? '' : `/${locale}`;

// 3) shape for the client
const items = filtered.map((r) => ({
  slug: r.slug,
  title: r.data.title,
  tags: r.data.tags || [],
  total: r.data.time?.total ?? null,
  date: r.data.date ?? null,
  difficulty: r.data.difficulty ?? null,
  image: r.data.images?.[0]?.src ?? null,
  summary: (r as any).data.summary ?? null,
}));
---

<BaseLayout
  title={t('recipes.all_recipes')}
  description={t('recipes.browse_all_recipes')}
  bgUrl={hero.src}
  mainClass="px-0 py-0 md:py-xl"
>
  <section class="mt-lg mx-auto w-full max-w-6xl">
    <Typography variant="h1" className="pb-lg">
      {t('recipes.all_recipes')}
    </Typography>

    <!-- Client component gets ONLY locale-filtered items -->
    <RecipesIndex client:load items={items} locale={locale} localePrefix={localePrefix} />
  </section>
</BaseLayout>
